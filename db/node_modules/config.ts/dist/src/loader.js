"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var run_mode_1 = require("./run-mode");
exports.loadConfig = function (structure) {
    if (run_mode_1.runMode.get() === 'LOADER') {
        var config = void 0;
        try {
            config = JSON.parse(fs_1.readFileSync('.config').toString());
        }
        catch (err) {
            throw new Error('Could not load configuration. Try running the configuration util');
        }
        validateConfig(config, structure);
        return config;
    }
    else {
        return structure;
    }
};
var validateConfig = function (config, structure) {
    Object.keys(structure)
        .forEach(function (key) {
        var expectedType = structure[key];
        var value = config[key];
        if (typeof value === 'undefined') {
            throw new Error("Configuration key \"" + key + "\" is missing from configuration");
        }
        if (!validateType(value, expectedType)) {
            throw new Error("Configuration key \"" + key + "\" type is incorrect. Value expected to be: \"" + expectedType + "\"");
        }
    });
};
var validateType = function (value, type) {
    switch (type) {
        case 'string':
            return typeof value === 'string';
        case 'number':
            return typeof value === 'number';
        case 'boolean':
            return typeof value === 'boolean';
    }
};
//# sourceMappingURL=loader.js.map